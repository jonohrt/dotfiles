"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const vscode_languageserver_protocol_1 = require("vscode-languageserver-protocol");
const coc_nvim_1 = require("coc.nvim");
const typeConverters = tslib_1.__importStar(require("./typeConverters"));
function getEditForCodeAction(client, action) {
    return action.changes && action.changes.length
        ? typeConverters.WorkspaceEdit.fromFileCodeEdits(client, action.changes)
        : undefined;
}
exports.getEditForCodeAction = getEditForCodeAction;
function applyCodeAction(client, action) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const workspaceEdit = getEditForCodeAction(client, action);
        if (workspaceEdit) {
            if (!(yield coc_nvim_1.workspace.applyEdit(workspaceEdit))) {
                return false;
            }
        }
        return applyCodeActionCommands(client, action);
    });
}
exports.applyCodeAction = applyCodeAction;
function applyCodeActionCommands(client, action) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        // make sure there is command
        if (action.commands && action.commands.length) {
            for (const command of action.commands) {
                const response = yield client.execute('applyCodeActionCommand', { command }, vscode_languageserver_protocol_1.CancellationToken.None);
                if (!response || response.type != 'response' || !response.body) {
                    return false;
                }
            }
        }
        return true;
    });
}
exports.applyCodeActionCommands = applyCodeActionCommands;
//# sourceMappingURL=codeAction.js.map