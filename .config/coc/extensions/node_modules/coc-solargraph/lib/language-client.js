"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const coc_nvim_1 = require("coc.nvim");
function makeLanguageClient(languageIds, configurations) {
    // Options to control the language client
    let clientOptions = {
        documentSelector: languageIds,
        synchronize: {
            // Synchronize the setting section 'solargraph' to the server
            configurationSection: 'solargraph',
            // Notify the server about file changes to any file in the workspace
            fileEvents: coc_nvim_1.workspace.createFileSystemWatcher('**/*')
        },
        initializationOptions: {
            enablePages: false
        },
        middleware: {
            // fix completeItem
            provideCompletionItem: (document, position, context, token, next) => {
                return Promise.resolve(next(document, position, context, token)).then((res) => {
                    let doc = coc_nvim_1.workspace.getDocument(document.uri);
                    if (!doc)
                        return [];
                    let items = res.hasOwnProperty('isIncomplete') ? res.items : res;
                    let result = {
                        isIncomplete: false,
                        items
                    };
                    if (items.length
                        && items.every(o => o.label.startsWith(':'))) {
                        result.startcol = doc.fixStartcol(position, [':']);
                    }
                    return result;
                });
            }
        }
    };
    let serverOptions = {
        command: configurations.commandPath || ' solargraph',
        args: ['stdio'],
        options: {
            shell: !!configurations.shell,
            env: Object.assign({}, process.env, configurations.env)
        }
    };
    return new coc_nvim_1.LanguageClient('solargraph', 'Ruby Language Server', serverOptions, clientOptions);
}
exports.makeLanguageClient = makeLanguageClient;
//# sourceMappingURL=language-client.js.map