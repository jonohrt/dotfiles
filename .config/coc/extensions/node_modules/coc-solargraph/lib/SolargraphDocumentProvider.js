"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const vscode_uri_1 = tslib_1.__importDefault(require("vscode-uri"));
const querystring_1 = tslib_1.__importDefault(require("querystring"));
class SolargraphDocumentProvider {
    constructor(languageClient) {
        this.languageClient = languageClient;
        this.docs = {};
    }
    updateAll() {
        Object.keys(this.docs).forEach(uri => {
            this.update(uri);
        });
    }
    remove(uri) {
        delete this.docs[uri];
    }
    provideTextDocumentContent(uri) {
        if (!this.docs[uri]) {
            this.update(uri);
        }
        return this.docs[uri.toString()] || 'Loading...';
    }
    parseQuery(query) {
        return querystring_1.default.parse(query.replace(/^\?/, ''));
    }
    update(uri) {
        let method = '$/solargraph' + vscode_uri_1.default.parse(uri).path;
        let query = this.parseQuery(vscode_uri_1.default.parse(uri).query);
        this.languageClient
            .sendRequest(method, { query: query.query })
            .then((result) => {
            this.docs[uri.toString()] = result.content;
        });
    }
}
exports.default = SolargraphDocumentProvider;
//# sourceMappingURL=SolargraphDocumentProvider.js.map