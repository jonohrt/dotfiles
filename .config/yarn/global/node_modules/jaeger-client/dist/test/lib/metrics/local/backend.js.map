{"version":3,"sources":["../../../../../test/lib/metrics/local/backend.js"],"names":["LocalBackend","reset","_counterValues","_counterTags","_timerValues","_timerTags","_gaugeValues","_gaugeTags","name","delta","tags","undefined","value","counter","valueEqual","_backend","_name","tagsEqual","isEqual","_tags"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AACA;;;;;;;;IAEqBA,Y;AAQnB,0BAAc;AAAA;;AACZ,SAAKC,KAAL;AACD;;;;4BAYO;AACN,WAAKC,cAAL,GAAsB,EAAtB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACA,WAAKC,YAAL,GAAoB,EAApB;AACA,WAAKC,UAAL,GAAkB,EAAlB;AACD;;;8BAESC,I,EAAcC,K,EAAeC,I,EAAiB;AACtD,UAAI,KAAKR,cAAL,CAAoBM,IAApB,MAA8BG,SAAlC,EAA6C;AAC3C,aAAKT,cAAL,CAAoBM,IAApB,IAA4B,CAA5B;AACD;AACD,WAAKN,cAAL,CAAoBM,IAApB,KAA6BC,KAA7B;AACA,WAAKN,YAAL,CAAkBK,IAAlB,IAA0BE,IAA1B;AACD;;;2BAEMF,I,EAAcI,K,EAAeF,I,EAAiB;AACnD,WAAKN,YAAL,CAAkBI,IAAlB,IAA0BI,KAA1B;AACA,WAAKP,UAAL,CAAgBG,IAAhB,IAAwBE,IAAxB;AACD;;;0BAEKF,I,EAAcI,K,EAAeF,I,EAAiB;AAClD,WAAKJ,YAAL,CAAkBE,IAAlB,IAA0BI,KAA1B;AACA,WAAKL,UAAL,CAAgBC,IAAhB,IAAwBE,IAAxB;AACD;;;kCAnCoBG,O,EAAuBD,K,EAAwB;AAClE,UAAIE,aAAaD,QAAQE,QAAR,CAAiBb,cAAjB,CAAgCW,QAAQG,KAAxC,MAAmDJ,KAApE;AACA,UAAIK,YAAY,iBAAEC,OAAF,CAAUL,QAAQE,QAAR,CAAiBZ,YAAjB,CAA8BU,QAAQG,KAAtC,CAAV,EAAwDH,QAAQM,KAAhE,CAAhB;AACA,aAAOL,cAAcG,SAArB;AACD;;;iCAEmBJ,O,EAA+B;AACjD,aAAOA,QAAQE,QAAR,CAAiBb,cAAjB,CAAgCW,QAAQG,KAAxC,CAAP;AACD;;;;;;kBApBkBhB,Y","file":"backend.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport _ from 'lodash';\nimport LocalCounter from './counter';\n\nexport default class LocalBackend {\n  _counterValues: any;\n  _counterTags: any;\n  _timerValues: any;\n  _timerTags: any;\n  _gaugeValues: any;\n  _gaugeTags: any;\n\n  constructor() {\n    this.reset();\n  }\n\n  static counterEquals(counter: LocalCounter, value: number): boolean {\n    let valueEqual = counter._backend._counterValues[counter._name] === value;\n    let tagsEqual = _.isEqual(counter._backend._counterTags[counter._name], counter._tags);\n    return valueEqual && tagsEqual;\n  }\n\n  static counterValue(counter: LocalCounter): number {\n    return counter._backend._counterValues[counter._name];\n  }\n\n  reset() {\n    this._counterValues = {};\n    this._counterTags = {};\n    this._timerValues = {};\n    this._timerTags = {};\n    this._gaugeValues = {};\n    this._gaugeTags = {};\n  }\n\n  increment(name: string, delta: number, tags: any): void {\n    if (this._counterValues[name] === undefined) {\n      this._counterValues[name] = 0;\n    }\n    this._counterValues[name] += delta;\n    this._counterTags[name] = tags;\n  }\n\n  record(name: string, value: number, tags: any): void {\n    this._timerValues[name] = value;\n    this._timerTags[name] = tags;\n  }\n\n  gauge(name: string, value: number, tags: any): void {\n    this._gaugeValues[name] = value;\n    this._gaugeTags[name] = tags;\n  }\n}\n"]}