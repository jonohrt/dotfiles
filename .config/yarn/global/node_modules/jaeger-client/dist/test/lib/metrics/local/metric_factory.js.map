{"version":3,"sources":["../../../../../test/lib/metrics/local/metric_factory.js"],"names":["LocalFactory","_backend","name","tags","kvPairs","sortedKeys","Object","keys","sort","i","length","key","value","hasOwnProperty","push","tagName","join","metricName","uniqueMetricName","_uniqueNameWithTags"],"mappings":";;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,Y;AAGnB,0BAAc;AAAA;;AACZ,SAAKC,QAAL,GAAgB,uBAAhB;AACD;;;;wCAEmBC,I,EAAcC,I,EAAmB;AACnD,UAAIC,UAAU,EAAd;AACA,UAAIC,aAAaC,OAAOC,IAAP,CAAYJ,IAAZ,EAAkBK,IAAlB,EAAjB;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,WAAWK,MAA/B,EAAuCD,GAAvC,EAA4C;AAC1C,YAAIE,MAAMN,WAAWI,CAAX,CAAV;AACA,YAAIG,QAAQT,KAAKQ,GAAL,CAAZ;AACA,YAAIR,KAAKU,cAAL,CAAoBF,GAApB,CAAJ,EAA8B;AAC5BP,kBAAQU,IAAR,CAAgBH,GAAhB,SAAuBC,KAAvB;AACD;AACF;;AAED,UAAIG,UAAUX,QAAQY,IAAR,EAAd;AACA,UAAIC,aAAgBf,IAAhB,SAAwBa,OAA5B;AACA,aAAOE,UAAP;AACD;;;kCAEaf,I,EAAuC;AAAA,UAAzBC,IAAyB,uEAAb,EAAa;;AACnD,UAAIe,mBAAmB,KAAKC,mBAAL,CAAyBjB,IAAzB,EAA+BC,IAA/B,CAAvB;AACA,aAAO,sBAAiBe,gBAAjB,EAAmCf,IAAnC,EAAyC,KAAKF,QAA9C,CAAP;AACD;;;gCAEWC,I,EAAqC;AAAA,UAAvBC,IAAuB,uEAAX,EAAW;;AAC/C,UAAIe,mBAAmB,KAAKC,mBAAL,CAAyBjB,IAAzB,EAA+BC,IAA/B,CAAvB;AACA,aAAO,oBAAee,gBAAf,EAAiCf,IAAjC,EAAuC,KAAKF,QAA5C,CAAP;AACD;;;gCAEWC,I,EAAqC;AAAA,UAAvBC,IAAuB,uEAAX,EAAW;;AAC/C,UAAIe,mBAAmB,KAAKC,mBAAL,CAAyBjB,IAAzB,EAA+BC,IAA/B,CAAvB;AACA,aAAO,oBAAee,gBAAf,EAAiCf,IAAjC,EAAuC,KAAKF,QAA5C,CAAP;AACD;;;;;;kBApCkBD,Y","file":"metric_factory.js","sourcesContent":["// @flow\n// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport LocalCounter from './counter';\nimport LocalGauge from './gauge';\nimport LocalTimer from './timer';\nimport LocalBackend from './backend';\n\nexport default class LocalFactory {\n  _backend: any;\n\n  constructor() {\n    this._backend = new LocalBackend();\n  }\n\n  _uniqueNameWithTags(name: string, tags: any): string {\n    let kvPairs = [];\n    let sortedKeys = Object.keys(tags).sort();\n    for (let i = 0; i < sortedKeys.length; i++) {\n      let key = sortedKeys[i];\n      let value = tags[key];\n      if (tags.hasOwnProperty(key)) {\n        kvPairs.push(`${key}=${value}`);\n      }\n    }\n\n    let tagName = kvPairs.join();\n    let metricName = `${name}.${tagName}`;\n    return metricName;\n  }\n\n  createCounter(name: string, tags: any = {}): Counter {\n    let uniqueMetricName = this._uniqueNameWithTags(name, tags);\n    return new LocalCounter(uniqueMetricName, tags, this._backend);\n  }\n\n  createTimer(name: string, tags: any = {}): Timer {\n    let uniqueMetricName = this._uniqueNameWithTags(name, tags);\n    return new LocalTimer(uniqueMetricName, tags, this._backend);\n  }\n\n  createGauge(name: string, tags: any = {}): Gauge {\n    let uniqueMetricName = this._uniqueNameWithTags(name, tags);\n    return new LocalGauge(uniqueMetricName, tags, this._backend);\n  }\n}\n"]}