{"version":3,"sources":["../../../test/lib/combinations.js"],"names":["combinations","paramLists","keysParam","combination","results","keys","Object","length","descriptionArray","i","key","push","description","join","_shallowClone","paramList","j","param","slice","obj","newObj","hasOwnProperty"],"mappings":";;;;;kBAsBwBA,Y;AAtBxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AAUe,SAASA,YAAT,CAAsBC,UAAtB,EAAkCC,SAAlC,EAA6E;AAAA,MAAhCC,WAAgC,uEAAlB,EAAkB;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC1F,MAAIC,OAAOH,aAAaI,OAAOD,IAAP,CAAYJ,UAAZ,CAAxB;AACA,MAAII,KAAKE,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAIC,mBAAmB,EAAvB;AACA,QAAIH,QAAOC,OAAOD,IAAP,CAAYJ,UAAZ,CAAX;AACA,SAAK,IAAIQ,IAAI,CAAb,EAAgBA,IAAIJ,MAAKE,MAAzB,EAAiCE,GAAjC,EAAsC;AACpC,UAAIC,OAAML,MAAKI,CAAL,CAAV;AACAD,uBAAiBG,IAAjB,CAAyBD,IAAzB,SAAgCP,YAAYO,IAAZ,CAAhC;AACD;AACDP,gBAAYS,WAAZ,GAA0BJ,iBAAiBK,IAAjB,CAAsB,GAAtB,CAA1B;AACAT,YAAQO,IAAR,CAAaG,cAAcX,WAAd,CAAb;AACA,WAAOC,OAAP;AACD;;AAED,MAAIM,MAAML,KAAK,CAAL,CAAV;AACA,MAAIU,YAAYd,WAAWS,GAAX,CAAhB;AACA,OAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAID,UAAUR,MAA9B,EAAsCS,GAAtC,EAA2C;AACzC,QAAIC,QAAQF,UAAUC,CAAV,CAAZ;;AAEAb,gBAAYO,GAAZ,IAAmBO,KAAnB;AACAb,cAAUJ,aAAaC,UAAb,EAAyBI,KAAKa,KAAL,CAAW,CAAX,CAAzB,EAAwCf,WAAxC,EAAqDC,OAArD,CAAV;AACD;;AAED,SAAOA,OAAP;AACD;;AAED,SAASU,aAAT,CAAuBK,GAAvB,EAA4B;AAC1B,MAAIC,SAAS,EAAb;AACA,OAAK,IAAIV,GAAT,IAAgBS,GAAhB,EAAqB;AACnB,QAAIA,IAAIE,cAAJ,CAAmBX,GAAnB,CAAJ,EAA6B;AAC3BU,aAAOV,GAAP,IAAcS,IAAIT,GAAJ,CAAd;AACD;AACF;AACD,SAAOU,MAAP;AACD","file":"combinations.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\n/**\n * Example:\n * combinations(['encoding', 'mode'], {encoding: ['json', 'thrift'], mode: ['channel', 'request']})\n * Produced combinations:\n *\n * [{ encoding: 'json', mode: 'channel' },\n *  { encoding: 'json', mode: 'request' },\n *  { encoding: 'thrift', mode: 'channel' },\n *  { encoding: 'thrift', mode: 'request' }]\n * */\nexport default function combinations(paramLists, keysParam, combination = {}, results = []) {\n  let keys = keysParam || Object.keys(paramLists);\n  if (keys.length === 0) {\n    let descriptionArray = [];\n    let keys = Object.keys(paramLists);\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i];\n      descriptionArray.push(`${key}=${combination[key]}`);\n    }\n    combination.description = descriptionArray.join(',');\n    results.push(_shallowClone(combination));\n    return results;\n  }\n\n  let key = keys[0];\n  let paramList = paramLists[key];\n  for (let j = 0; j < paramList.length; j++) {\n    let param = paramList[j];\n\n    combination[key] = param;\n    results = combinations(paramLists, keys.slice(1), combination, results);\n  }\n\n  return results;\n}\n\nfunction _shallowClone(obj) {\n  let newObj = {};\n  for (let key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      newObj[key] = obj[key];\n    }\n  }\n  return newObj;\n}\n"]}