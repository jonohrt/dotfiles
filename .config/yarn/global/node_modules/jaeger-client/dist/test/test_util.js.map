{"version":3,"sources":["../../test/test_util.js"],"names":["describe","tracer","span","spanContext","before","beforeEach","startSpan","fromString","it","tags","keyOne","keyTwo","addTags","isOk","hasTags","isNotOk","k","expectedTags","actualTags","getTags","equal","filteredTags","deepEqual"],"mappings":";;AAYA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWAA,SAAS,WAAT,EAAsB,YAAM;AAC1B,MAAIC,eAAJ;AACA,MAAIC,aAAJ;AACA,MAAIC,oBAAJ;;AAEAC,SAAO,YAAM;AACXH,aAAS,qBAAW,aAAX,EAA0B,kCAA1B,EAAkD,4BAAiB,IAAjB,CAAlD,CAAT;AACD,GAFD;;AAIAI,aAAW,YAAM;AACfH,WAAOD,OAAOK,SAAP,CAAiB,SAAjB,CAAP;AACAH,kBAAc,uBAAYI,UAAZ,CAAuB,YAAvB,CAAd;AACD,GAHD;;AAKAC,KAAG,wBAAH,EAA6B,YAAM;AACjC,QAAIC,OAAO;AACTC,cAAQ,UADC;AAETC,cAAQ;AAFC,KAAX;AAIAT,SAAKU,OAAL,CAAaH,IAAb;;AAEA,iBAAOI,IAAP,CAAY,oBAAUC,OAAV,CAAkBZ,IAAlB,EAAwBO,IAAxB,CAAZ;AACA,iBAAOM,OAAP,CAAe,oBAAUD,OAAV,CAAkBZ,IAAlB,EAAwB,EAAEc,GAAG,GAAL,EAAxB,CAAf;AACA,iBAAOD,OAAP,CAAe,oBAAUD,OAAV,CAAkBZ,IAAlB,EAAwB,EAAEQ,QAAQ,UAAV,EAAxB,CAAf;AACD,GAVD;;AAYAF,KAAG,wBAAH,EAA6B,YAAM;AACjC,QAAIS,eAAe;AACjBP,cAAQ,UADS;AAEjBC,cAAQ;AAFS,KAAnB;AAIAT,SAAKU,OAAL,CAAaK,YAAb;AACA,QAAIC,aAAa,oBAAUC,OAAV,CAAkBjB,IAAlB,CAAjB;AACA,iBAAOkB,KAAP,CAAaF,WAAW,QAAX,CAAb,EAAmCD,aAAa,QAAb,CAAnC;AACA,iBAAOG,KAAP,CAAaF,WAAW,QAAX,CAAb,EAAmCD,aAAa,QAAb,CAAnC;AACA,QAAII,eAAe,oBAAUF,OAAV,CAAkBjB,IAAlB,EAAwB,CAAC,QAAD,EAAW,UAAX,CAAxB,CAAnB;AACA,iBAAOoB,SAAP,CAAiB,EAAEX,QAAQ,UAAV,EAAjB,EAAyCU,YAAzC;AACD,GAXD;AAYD,CAtCD","file":"test_util.js","sourcesContent":["// Copyright (c) 2016 Uber Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n// in compliance with the License. You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software distributed under the License\n// is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing permissions and limitations under\n// the License.\n\nimport { assert } from 'chai';\nimport ConstSampler from '../src/samplers/const_sampler.js';\nimport InMemoryReporter from '../src/reporters/in_memory_reporter.js';\nimport opentracing from 'opentracing';\nimport SpanContext from '../src/span_context.js';\nimport Tracer from '../src/tracer.js';\nimport TestUtils from '../src/test_util.js';\nimport Utils from '../src/util.js';\n\ndescribe('TestUtils', () => {\n  let tracer;\n  let span;\n  let spanContext;\n\n  before(() => {\n    tracer = new Tracer('test-tracer', new InMemoryReporter(), new ConstSampler(true));\n  });\n\n  beforeEach(() => {\n    span = tracer.startSpan('op-name');\n    spanContext = SpanContext.fromString('ab:cd:ef:3');\n  });\n\n  it('should support hasTags', () => {\n    let tags = {\n      keyOne: 'valueOne',\n      keyTwo: 'valueTwo',\n    };\n    span.addTags(tags);\n\n    assert.isOk(TestUtils.hasTags(span, tags));\n    assert.isNotOk(TestUtils.hasTags(span, { k: 'v' }));\n    assert.isNotOk(TestUtils.hasTags(span, { keyOne: 'valueTwo' }));\n  });\n\n  it('should support getTags', () => {\n    let expectedTags = {\n      keyOne: 'valueOne',\n      keyTwo: 'valueTwo',\n    };\n    span.addTags(expectedTags);\n    let actualTags = TestUtils.getTags(span);\n    assert.equal(actualTags['keyOne'], expectedTags['keyOne']);\n    assert.equal(actualTags['keyTwo'], expectedTags['keyTwo']);\n    let filteredTags = TestUtils.getTags(span, ['keyTwo', 'keyThree']);\n    assert.deepEqual({ keyTwo: 'valueTwo' }, filteredTags);\n  });\n});\n"]}